from splendor_bot.game_logic.types import Gems, Card, Noble


deck_level_1 = [
    Card(level, points, Gems(gen_w, gen_u, gen_g, gen_r, gen_b, gen_y), Gems(cost_w, cost_u, cost_g, cost_r, cost_b, cost_y))
    for level, points, (gen_w, gen_u, gen_g, gen_r, gen_b, gen_y), (cost_w, cost_u, cost_g, cost_r, cost_b, cost_y) in [
        (1, 0, (1, 0, 0, 0, 0, 0), (0, 1, 1, 1, 1, 0)),
        (1, 0, (1, 0, 0, 0, 0, 0), (0, 1, 2, 1, 1, 0)),
        (1, 0, (1, 0, 0, 0, 0, 0), (0, 2, 2, 0, 1, 0)),
        (1, 0, (1, 0, 0, 0, 0, 0), (3, 1, 0, 0, 1, 0)),
        (1, 0, (1, 0, 0, 0, 0, 0), (0, 0, 0, 2, 1, 0)),
        (1, 0, (1, 0, 0, 0, 0, 0), (0, 2, 0, 0, 2, 0)),
        (1, 0, (1, 0, 0, 0, 0, 0), (0, 3, 0, 0, 0, 0)),
        (1, 1, (1, 0, 0, 0, 0, 0), (0, 0, 4, 0, 0, 0)),

        (1, 0, (0, 1, 0, 0, 0, 0), (1, 0, 1, 1, 1, 0)),
        (1, 0, (0, 1, 0, 0, 0, 0), (1, 0, 1, 2, 1, 0)),
        (1, 0, (0, 1, 0, 0, 0, 0), (1, 0, 2, 2, 0, 0)),
        (1, 0, (0, 1, 0, 0, 0, 0), (0, 1, 3, 1, 0, 0)),
        (1, 0, (0, 1, 0, 0, 0, 0), (1, 0, 0, 0, 2, 0)),
        (1, 0, (0, 1, 0, 0, 0, 0), (0, 0, 2, 0, 2, 0)),
        (1, 0, (0, 1, 0, 0, 0, 0), (0, 0, 0, 0, 3, 0)),
        (1, 1, (0, 1, 0, 0, 0, 0), (0, 0, 0, 4, 0, 0)),

        (1, 0, (0, 0, 1, 0, 0, 0), (1, 1, 0, 1, 1, 0)),
        (1, 0, (0, 0, 1, 0, 0, 0), (1, 1, 0, 1, 2, 0)),
        (1, 0, (0, 0, 1, 0, 0, 0), (0, 1, 0, 2, 2, 0)),
        (1, 0, (0, 0, 1, 0, 0, 0), (1, 3, 1, 0, 0, 0)),
        (1, 0, (0, 0, 1, 0, 0, 0), (2, 1, 0, 0, 0, 0)),
        (1, 0, (0, 0, 1, 0, 0, 0), (0, 2, 0, 2, 0, 0)),
        (1, 0, (0, 0, 1, 0, 0, 0), (0, 0, 0, 3, 0, 0)),
        (1, 1, (0, 0, 1, 0, 0, 0), (0, 0, 0, 0, 4, 0)),

        (1, 0, (0, 0, 0, 1, 0, 0), (1, 1, 1, 0, 1, 0)),
        (1, 0, (0, 0, 0, 1, 0, 0), (2, 1, 1, 0, 1, 0)),
        (1, 0, (0, 0, 0, 1, 0, 0), (2, 0, 1, 0, 2, 0)),
        (1, 0, (0, 0, 0, 1, 0, 0), (1, 0, 0, 1, 3, 0)),
        (1, 0, (0, 0, 0, 1, 0, 0), (0, 2, 1, 0, 0, 0)),
        (1, 0, (0, 0, 0, 1, 0, 0), (2, 0, 0, 2, 0, 0)),
        (1, 0, (0, 0, 0, 1, 0, 0), (3, 0, 0, 0, 0, 0)),
        (1, 1, (0, 0, 0, 1, 0, 0), (4, 0, 0, 0, 0, 0)),

        (1, 0, (0, 0, 0, 0, 1, 0), (1, 1, 1, 1, 0, 0)),
        (1, 0, (0, 0, 0, 0, 1, 0), (1, 2, 1, 1, 0, 0)),
        (1, 0, (0, 0, 0, 0, 1, 0), (2, 2, 0, 1, 0, 0)),
        (1, 0, (0, 0, 0, 0, 1, 0), (0, 0, 1, 3, 1, 0)),
        (1, 0, (0, 0, 0, 0, 1, 0), (0, 0, 2, 1, 0, 0)),
        (1, 0, (0, 0, 0, 0, 1, 0), (2, 0, 2, 0, 0, 0)),
        (1, 0, (0, 0, 0, 0, 1, 0), (0, 0, 3, 0, 0, 0)),
        (1, 1, (0, 0, 0, 0, 1, 0), (0, 4, 0, 0, 0, 0)),
    ]
]

deck_level_2 = [
    Card(level, points, Gems(gen_w, gen_u, gen_g, gen_r, gen_b, gen_y), Gems(cost_w, cost_u, cost_g, cost_r, cost_b, cost_y))
    for level, points, (gen_w, gen_u, gen_g, gen_r, gen_b, gen_y), (cost_w, cost_u, cost_g, cost_r, cost_b, cost_y) in [
        (2, 1, (1, 0, 0, 0, 0, 0), (0, 0, 3, 2, 2, 0)),
        (2, 1, (1, 0, 0, 0, 0, 0), (2, 3, 0, 3, 0, 0)),
        (2, 2, (1, 0, 0, 0, 0, 0), (0, 0, 1, 4, 2, 0)),
        (2, 2, (1, 0, 0, 0, 0, 0), (0, 0, 0, 5, 3, 0)),
        (2, 2, (1, 0, 0, 0, 0, 0), (0, 0, 0, 5, 0, 0)),
        (2, 3, (1, 0, 0, 0, 0, 0), (6, 0, 0, 0, 0, 0)),

        (2, 1, (0, 1, 0, 0, 0, 0), (0, 2, 2, 3, 0, 0)),
        (2, 1, (0, 1, 0, 0, 0, 0), (0, 2, 3, 0, 3, 0)),
        (2, 2, (0, 1, 0, 0, 0, 0), (5, 3, 0, 0, 0, 0)),
        (2, 2, (0, 1, 0, 0, 0, 0), (2, 0, 0, 1, 4, 0)),
        (2, 2, (0, 1, 0, 0, 0, 0), (0, 5, 0, 0, 0, 0)),
        (2, 3, (0, 1, 0, 0, 0, 0), (0, 6, 0, 0, 0, 0)),

        (2, 1, (0, 0, 1, 0, 0, 0), (3, 0, 2, 3, 0, 0)),
        (2, 1, (0, 0, 1, 0, 0, 0), (2, 3, 0, 0, 2, 0)),
        (2, 2, (0, 0, 1, 0, 0, 0), (4, 2, 0, 0, 1, 0)),
        (2, 2, (0, 0, 1, 0, 0, 0), (0, 5, 3, 0, 0, 0)),
        (2, 2, (0, 0, 1, 0, 0, 0), (0, 0, 5, 0, 0, 0)),
        (2, 3, (0, 0, 1, 0, 0, 0), (0, 0, 6, 0, 0, 0)),

        (2, 1, (0, 0, 0, 1, 0, 0), (2, 0, 0, 2, 3, 0)),
        (2, 1, (0, 0, 0, 1, 0, 0), (0, 3, 0, 2, 3, 0)),
        (2, 2, (0, 0, 0, 1, 0, 0), (1, 4, 2, 0, 0, 0)),
        (2, 2, (0, 0, 0, 1, 0, 0), (3, 0, 0, 0, 5, 0)),
        (2, 2, (0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 5, 0)),
        (2, 3, (0, 0, 0, 1, 0, 0), (0, 0, 0, 6, 0, 0)),

        (2, 1, (0, 0, 0, 0, 1, 0), (3, 2, 2, 0, 0, 0)),
        (2, 1, (0, 0, 0, 0, 1, 0), (3, 0, 3, 0, 2, 0)),
        (2, 2, (0, 0, 0, 0, 1, 0), (0, 1, 4, 2, 0, 0)),
        (2, 2, (0, 0, 0, 0, 1, 0), (0, 0, 5, 3, 0, 0)),
        (2, 2, (0, 0, 0, 0, 1, 0), (5, 0, 0, 0, 0, 0)),
        (2, 3, (0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 6, 0)),
    ]
]

deck_level_3 = [
    Card(level, points, Gems(gen_w, gen_u, gen_g, gen_r, gen_b, gen_y), Gems(cost_w, cost_u, cost_g, cost_r, cost_b, cost_y))
    for level, points, (gen_w, gen_u, gen_g, gen_r, gen_b, gen_y), (cost_w, cost_u, cost_g, cost_r, cost_b, cost_y) in [
        (3, 3, (1, 0, 0, 0, 0, 0), (0, 3, 3, 5, 3, 0)),
        (3, 4, (1, 0, 0, 0, 0, 0), (0, 0, 0, 0, 7, 0)),
        (3, 4, (1, 0, 0, 0, 0, 0), (3, 0, 0, 3, 6, 0)),
        (3, 5, (1, 0, 0, 0, 0, 0), (3, 0, 0, 0, 7, 0)),

        (3, 3, (0, 1, 0, 0, 0, 0), (3, 0, 3, 3, 5, 0)),
        (3, 4, (0, 1, 0, 0, 0, 0), (7, 0, 0, 0, 0, 0)),
        (3, 4, (0, 1, 0, 0, 0, 0), (6, 3, 0, 0, 3, 0)),
        (3, 5, (0, 1, 0, 0, 0, 0), (7, 3, 0, 0, 0, 0)),

        (3, 3, (0, 0, 1, 0, 0, 0), (5, 3, 0, 3, 3, 0)),
        (3, 4, (0, 0, 1, 0, 0, 0), (0, 7, 0, 0, 0, 0)),
        (3, 4, (0, 0, 1, 0, 0, 0), (3, 6, 3, 0, 0, 0)),
        (3, 5, (0, 0, 1, 0, 0, 0), (0, 7, 3, 0, 0, 0)),

        (3, 3, (0, 0, 0, 1, 0, 0), (3, 5, 3, 0, 3, 0)),
        (3, 4, (0, 0, 0, 1, 0, 0), (0, 0, 7, 0, 0, 0)),
        (3, 4, (0, 0, 0, 1, 0, 0), (0, 3, 6, 3, 0, 0)),
        (3, 5, (0, 0, 0, 1, 0, 0), (0, 0, 7, 3, 0, 0)),

        (3, 3, (0, 0, 0, 0, 1, 0), (3, 3, 5, 3, 0, 0)),
        (3, 4, (0, 0, 0, 0, 1, 0), (0, 0, 0, 7, 0, 0)),
        (3, 4, (0, 0, 0, 0, 1, 0), (0, 0, 3, 6, 3, 0)),
        (3, 5, (0, 0, 0, 0, 1, 0), (0, 0, 0, 7, 3, 0)),
    ]
]


decks_by_level = [deck_level_1, deck_level_2, deck_level_3]


nobles = [
    Noble(points, Gems(w, u, g, r, b, y))
    for points, (w, u, g, r, b, y) in [
        (3, (3, 3, 3, 0, 0, 0)),
        (3, (0, 3, 3, 3, 0, 0)),
        (3, (0, 0, 3, 3, 3, 0)),
        (3, (3, 0, 0, 3, 3, 0)),
        (3, (3, 3, 0, 0, 3, 0)),
        (3, (4, 4, 0, 0, 0, 0)),
        (3, (0, 4, 4, 0, 0, 0)),
        (3, (0, 0, 4, 4, 0, 0)),
        (3, (0, 0, 0, 4, 4, 0)),
        (3, (4, 0, 0, 0, 4, 0)),
    ]
]
